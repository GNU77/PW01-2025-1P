--Rutas: Cada ruta tiene un origen, destino, distancia en kilómetros y un precio base.

CREATE TABLE Rutas (
        ruta_id number generated by default as identity primary key,
        origen VARCHAR(50) NOT NULL,
        destino VARCHAR(50) NOT NULL,
        distancia_km number NOT NULL CHECK (distancia_km > 0),
        precio_base number NOT NULL CHECK (precio_base > 0)
) 

--Autobuses: Cada autobús tiene un número de identificación, capacidad de asientos, marca y modelo.
CREATE TABLE autobuses(
        bus_id number generated by default as identity primary key,
        num_identificacion VARCHAR(20) NOT NULL UNIQUE,
        capacidad_asientos number NOT NULL CHECK (capacidad_asientos > 0),
        marca VARCHAR(20) NOT NULL,
        modelo VARCHAR(20) NOT NULL

)


--Horarios: Cada horario está asociado a una ruta y un autobús, con fecha, hora de salida y hora estimada de llegada.
--Un autobús puede cubrir varias rutas en diferentes horarios, pero no puede estar asignado a más de un horario en la misma fecha y hora.

CREATE TABLE Horarios (
        horario_id number generated by default as identity primary key,
        ruta_id number NOT NULL REFERENCES rutas(ruta_id),
        bus_id number NOT NULL REFERENCES autobuses(bus_id),
        fecha DATE NOT NULL,
        hora_salida TIMESTAMP NOT NULL,
        hora_llegada_est TIMESTAMP NOT NULL,
        CONSTRAINT ck_horas CHECK (hora_llegada_est > hora_salida),
        CONSTRAINT ck_bus_fecha UNIQUE (bus_id, fecha, hora_salida)

);

--Ventas: Cada venta corresponde a un horario específico y registra el nombre del pasajero, número de asiento, precio pagado y estado (confirmado o cancelado).
--No se pueden vender boletos para asientos que ya estén ocupados en un horario específico.
--Si una venta es cancelada, el asiento debe quedar disponible nuevamente.

CREATE TABLE ventas(
        venta_id number generated by default as identity primary key,
        horario_id number NOT NULL REFERENCES Horarios(horario_id),
        pasajero_nombre VARCHAR(100) NOT NULL,
        asiento VARCHAR(10) NOT NULL,
        precio_pagado number,
        estado VARCHAR (12) NOT NULL CHECK (estado IN ('CONFIRMADO', 'CANCELADO')),
        CONSTRAINT ck_asiento_horario UNIQUE (horario_id, asiento )

);